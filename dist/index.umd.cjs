(function(i,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(i=typeof globalThis<"u"?globalThis:i||self,s(i.MyLib={}))})(this,function(i){"use strict";var j=Object.defineProperty;var x=(i,s,c)=>s in i?j(i,s,{enumerable:!0,configurable:!0,writable:!0,value:c}):i[s]=c;var n=(i,s,c)=>(x(i,typeof s!="symbol"?s+"":s,c),c);class s{constructor({name:e,height:t,width:o,x:a,y:d,color:r,speed:p}){n(this,"name");n(this,"x");n(this,"y");n(this,"width");n(this,"height");n(this,"color");n(this,"speed");this.name=e,this.height=t,this.width=o,this.x=a,this.y=d,this.color=r||"#0000ff",this.speed=p||1}}class c extends s{constructor({name:e,radius:t,x:o,y:a,color:d,speed:r}){super({name:e,height:t,width:t,x:o,y:a,color:d,speed:r})}}class u extends s{}class l{constructor({width:e,height:t}){n(this,"canvas");n(this,"context");n(this,"width");n(this,"height");this.width=e,this.height=t}getContainer(){return this.canvas}createContainer(){this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,document.body.appendChild(this.canvas),this.context=this.canvas.getContext("2d")}render(e){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);for(const t of e)this.context.fillStyle=t.color,t instanceof c&&(this.context.arc(t.x,t.y,t.width,0,Math.PI*2,!1),this.context.beginPath(),this.context.arc(t.x,t.y,t.width,0,Math.PI*2,!1),this.context.fill()),t instanceof u&&(this.context.strokeRect(t.x,t.y,t.width,t.height),this.context.fillRect(t.x,t.y,t.width,t.height))}}class f{addInputListener(e){document.addEventListener("keydown",t=>{e(t)})}}class b{constructor({height:e,width:t,inputHandleObjectPort:o,uiHandleObjectPort:a}){n(this,"uiHandleObjectPort");n(this,"inputHandleObjectPort");n(this,"objects",[]);a||(this.uiHandleObjectPort=new l({width:t,height:e})),o||(this.inputHandleObjectPort=new f),this.uiHandleObjectPort.createContainer(),this.setupInput()}setDependencies(){}addObject(e){this.objects.push(e)}removeObject(e){const t=this.objects.indexOf(e);t!==-1&&this.objects.splice(t,1)}update(){for(const e of this.objects)e.update(this)}render(){this.uiHandleObjectPort.render(this.objects)}setupInput(){this.inputHandleObjectPort.addInputListener(e=>{for(const t of this.objects)t.handleInput(e)})}start(){this.setDependencies();const e=()=>{this.update(),this.render(),requestAnimationFrame(e)};e()}getContainer(){return this.uiHandleObjectPort.getContainer()}getObjects(){return this.objects}}i.Circle=c,i.Game=b,i.GenericObject=s,i.Rect=u,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
